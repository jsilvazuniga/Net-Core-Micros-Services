docker --version
docker build -t jsilvazuniga/platformservice .

docker run -p 8080:80 -d jsilvazuniga/platformservice

docker ps

docker stop <container id>

docker start <container id>

publicacion docker hub
***********************

docker push jsilvazuniga/platformservice


KUBERNETES
°°°°°°°°°°°°°°
kubectl version

kubectl apply -f platforms-depl.yaml

kubectl get deployments

kubectl get pods

kubectl delete deployments platforms-depl

kubectl apply -f platforms-np-srv.yaml

kubectl get services

/****************/

dotnet new webapi -n CommandsService

code -r CommandsService

dotnet add package AutoMapper.Extensions.Microsoft.DependencyInjection
dotnet add package Microsoft.EntityFrameworkCore
dotnet add package Microsoft.EntityFrameworkCore.design
dotnet add package Microsoft.EntityFrameworkCore.inMemory

dotnet run

/***************************/

docker build -t jsilvazuniga/commandservice .

docker push jsilvazuniga/commandservice

docker run -p 8081:80 jsilvazuniga/commandservice




/**********/

kubectl get deployments

kubectl get pods

kubectl get services

kubectl apply -f platforms-depl.yaml

kubectl rollout restart deployment platforms-depl

kubectl apply -f commands-depl.yaml

/***************/
https://kubernetes.github.io/ingress-nginx/deploy/

kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.0/deploy/static/provider/cloud/deploy.yaml

kubectl get pods --namespace=ingress-nginx

kubectl get services --namespace=ingress-nginx


echo 127.0.0.1 acme.com >> %WINDIR%\System32\Drivers\Etc\Hosts

kubectl apply -f ingress-srv.yaml